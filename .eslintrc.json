{
    // eslint의 룰을 기본 권장설정으로 설정
    "extends": [
        "plugin:import/recommended",
        "plugin:import/typescript",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        // "@react-native-community",
        // Definition issue 존재: https://github.com/iamturns/eslint-config-airbnb-typescript/issues/182
        //"airbnb-typescript",
        "airbnb",
        "airbnb/hooks",
        // eslint의 typescript 포매팅 기능을 제거(eslint-config-prettier)
        "prettier",
        // eslint의 포매팅 기능을 제거, prettier로 포매팅 적용. 항상 마지막에 세팅 되어야 함. (eslint-plugin-prettier)
        "plugin:prettier/recommended"
    ],
    "plugins": ["prettier", "react", "@typescript-eslint"],
    // 코드를 해석하는 parser에 대한 설정
    "parserOptions": {
        "project": "./tsconfig.json",
        // 자바스크립트 버전, 7은 ECMA2016
        "ecmaVersion": 8,
        "ecmaFeatures": {
            "jsx": true
        },
        "sourceType": "module"
    },
    // linter가 파일을 분석할 때, 미리 정의된 전역변수에 무엇이 있는지 명시하는 속성
    "env": {
        // node.js에서 console과 같은 전역변수 사용 여부
        "node": true,
        "es2017": true
    },
    // ESLint가 무시할 디렉토리, 파일을 설정
    "ignorePatterns": ["node_modules"],
    "globals": {
        "fetch": true
    },
    // ESLint 룰을 설정
    "rules": {
        // prettier에 맞게 룰을 설정
        "prettier/prettier": [
            2,
            {
                "endOfLine": "auto"
            }
        ],
        "react/jsx-filename-extension": [
            1,
            {
                "extensions": [".js", ".jsx", ".ts", ".tsx"]
            }
        ],
        // issue exists: https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
            "error",
            { "functions": true, "typedefs": true }
        ],
        // note you must disable the base rule as it can report incorrect errors: https://stackoverflow.com/questions/63961803/eslint-says-all-enums-in-typescript-app-are-already-declared-in-the-upper-scope
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": ["error"],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/no-unsafe-call": 0,
        "@typescript-eslint/no-unsafe-assignment": 0,
        "import/default": 0,
        // Indent with 4 spaces
        //"indent": ["error", 4],
        // Indent JSX with 4 spaces
        "react/jsx-indent": ["error", 4],
        // Indent props with 4 spaces
        "react/jsx-indent-props": ["error", 4],
        "react/prop-types": 0,
        "react/jsx-props-no-spreading": [
            0,
            {
                "exceptions": [
                    "Button",
                    "View",
                    "Text",
                    "EventList",
                    "EventItem"
                ]
            }
        ],
        "import/no-extraneous-dependencies": 0,
        "import/prefer-default-export": 0,
        "no-unused-expressions": [
            2,
            { "allowTernary": true, "allowShortCircuit": true }
        ],
        "lines-between-class-members": [
            "error",
            "always",
            { "exceptAfterSingleLine": true }
        ],
        "react/jsx-wrap-multilines": [
            2,
            {
                "declaration": "parens",
                "assignment": "parens",
                "return": "parens",
                "arrow": "parens",
                "condition": "ignore",
                "logical": "ignore",
                "prop": "ignore"
            }
        ],
        "import/extensions": "off",
        "import/order": [
            "error",
            {
                "groups": ["builtin", "external", "internal"],
                // 우선 순위 높은거를 위에 설정
                "pathGroups": [
                    {
                        "pattern": "react",
                        "group": "external",
                        "position": "before"
                    },
                    // {
                    //     "pattern": "react-native",
                    //     "group": "external",
                    //     "position": "before"
                    // },
                    {
                        "pattern": "mobx",
                        "group": "external",
                        "position": "before"
                    },
                    {
                        "pattern": "mobx-react",
                        "group": "external",
                        "position": "before"
                    }
                    // {
                    //     "pattern": "@stores/**",
                    //     "group": "internal",
                    //     "position": "before"
                    // },
                    // {
                    //     "pattern": "@shared/**",
                    //     "group": "internal",
                    //     "position": "before"
                    // }
                ],
                "pathGroupsExcludedImportTypes": [],
                "newlines-between": "always",
                "alphabetize": {
                    "order": "asc",
                    "caseInsensitive": true
                }
            }
        ],
        // 코드 컨벤션에 맞도록 규칙 수정

        // 컴포넌트 Props 기본값 요구하는 규칙 off
        "react/require-default-props": "off",
        // 함수선언으로만 컴포넌트 만들게 하는 규칙 off
        "react/function-component-definition": "off",
        // 화살표 함수 리턴 시 중괄호 블록 강제함
        "arrow-body-style": ["error", "always"]
    },
    "parser": "@typescript-eslint/parser",
    "settings": {
        "import/resolver": {
            // "babel-module": {
            //     "env": "development"
            // },
            "typescript": {}
        }
    }
}
